# Base
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:21-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="${PNPM_HOME}/bin:${PATH}"
RUN corepack enable

# Copy Files
WORKDIR /frontend
COPY package*.json .
COPY pnpm-lock.yaml .
COPY public ./public
COPY src ./src
COPY tsconfig.json .
COPY tsconfig.node.json .
COPY .eslintrc.cjs .
COPY components.json .
COPY index.html .
COPY postcss.config.js .
COPY tailwind.config.js .
COPY vite.config.ts .

ARG CONTAINER_ENV=production
RUN if [ -f .env.${CONTAINER_ENV} ]; then cp .env.${CONTAINER_ENV} .env; fi

# Build
FROM base AS build
RUN --mount=type=cache,target=/pnpm \
  pnpm install --frozen-lockfile
RUN if [ "$CONTAINER_ENV" = "production" ]; then \
    pnpm build:prod; \
  else \
    pnpm build; \
  fi

# Runner
FROM containers.chewed-k8s.net/docker_hub_cache/library/nginx:1.25-alpine AS runner
COPY --from=build /frontend/dist /usr/share/nginx/html
COPY ./k8s/nginx.conf /etc/nginx/conf.d/default.conf
RUN apk update
RUN apk upgrade

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
